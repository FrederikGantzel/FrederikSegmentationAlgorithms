// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_Dynprog
NumericMatrix Rcpp_Dynprog(NumericVector input_data_vector, int max_segments);
RcppExport SEXP _FrederikSegmentationAlgorithms_Rcpp_Dynprog(SEXP input_data_vectorSEXP, SEXP max_segmentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type input_data_vector(input_data_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type max_segments(max_segmentsSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_Dynprog(input_data_vector, max_segments));
    return rcpp_result_gen;
END_RCPP
}
// Frederik_Dynprog_interface
NumericMatrix Frederik_Dynprog_interface(NumericVector input_data_vector, int max_segments);
RcppExport SEXP _FrederikSegmentationAlgorithms_Frederik_Dynprog_interface(SEXP input_data_vectorSEXP, SEXP max_segmentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type input_data_vector(input_data_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type max_segments(max_segmentsSEXP);
    rcpp_result_gen = Rcpp::wrap(Frederik_Dynprog_interface(input_data_vector, max_segments));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _FrederikSegmentationAlgorithms_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FrederikSegmentationAlgorithms_Rcpp_Dynprog", (DL_FUNC) &_FrederikSegmentationAlgorithms_Rcpp_Dynprog, 2},
    {"_FrederikSegmentationAlgorithms_Frederik_Dynprog_interface", (DL_FUNC) &_FrederikSegmentationAlgorithms_Frederik_Dynprog_interface, 2},
    {"_FrederikSegmentationAlgorithms_rcpp_hello_world", (DL_FUNC) &_FrederikSegmentationAlgorithms_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_FrederikSegmentationAlgorithms(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
